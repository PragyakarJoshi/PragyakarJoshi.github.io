{"version":3,"sources":["components/commons/Header/Header.jsx","components/Landing/index.jsx","components/Landing/Landing.jsx","components/commons/NotFound/NotFound.jsx","components/Stats/Stats.jsx","components/Vote/Vote.jsx","components/Vote/index.jsx","components/NewPoll/Form.jsx","components/NewPoll/NewPoll.jsx","components/Report/GraphLegend.jsx","components/Report/Graph.jsx","components/Report/Report.jsx","Router.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Landing","commons_Header_Header","react_router_dom","to","NotFound","Stats","props","_props$data","data","optionA","optionAcount","optionB","optionBcount","parseInt","Vote","state","host","title","optionApercent","optionBpercent","activePollExists","_this$state","_this","addVoteLeft","setState","updateVotes","console","log","addVoteRight","totalVotes","percentA","percentB","Math","round","localStorage","setItem","viewReport","history","push","_this2","this","getItem","gridSizes","display","gridTemplateColumns","_this$state2","activePoll","Fragment","style","onClick","components_Stats_Stats","commons_NotFound_NotFound","React","Component","withRouter","PollForm","error","startPoll","updateFormState","e","clearErrorMessage","Object","defineProperty","target","name","value","clear","type","id","placeholder","onChange","maxLength","NewPoll","Form","GraphLegend","optionAcolor","optionBcolor","background","Graph","_this$props$graphStat","graphStats","dist_default","color","label","labelStyle","fontSize","fontFamily","radius","labelPosition","animate","Report_GraphLegend","Report","componentDidMount","Report_Graph","Router","basename","process","react_router","exact","path","component","App","src_Router","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a0923fa.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <div className=\"header\">\n    <p className=\"logo\">\n      <span className=\"blu\">Ver</span>\n      <span className=\"purp\">sus</span>\n    </p>\n    <p className=\"subtitle\">Voting made easy</p>\n  </div>\n);\n\nexport default Header;","import Landing from './Landing';\nexport default Landing;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../commons/Header/Header';\n\nconst Landing = () => (\n  <div className=\"main-container\">\n    <Header />        \n    <div className=\"landing-container\">\n      <Link to='/ask' className=\"btn-ask\">\n        Start new poll\n      </Link>\n    </div>\n  </div>\n)\n\nexport default Landing;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <p>There are no active polls currently.</p>\n    <br />\n    <Link to='/ask' className=\"btn-ask\">Start a new Poll</Link>\n  </div>\n)\n\nexport default NotFound;","import React from 'react';\n\nconst Stats = props => {\n  const {optionA, optionAcount, optionB, optionBcount} = props.data;\n  return(\n    <div className=\"stats-container\">\n      <span>{optionA}: {optionAcount}</span>\n      <br />\n      <span>{optionB}: {optionBcount}</span>\n      <br />\n      <span>Total Votes casted: {(parseInt(optionAcount) - 1) + (parseInt(optionBcount) - 1)}</span>\n    </div>\n  )\n}\n\nexport default Stats;","import React from \"react\";\nimport { withRouter} from 'react-router-dom';\nimport NotFound from \"../commons/NotFound/NotFound\";\nimport Stats from \"../Stats/Stats\";\n\nclass Vote extends React.Component {\n  state = {\n    host: \"\",\n    title: \"\",\n    optionA: \"\",\n    optionB: \"\",\n    optionAcount: 0,\n    optionBcount: 0,\n    optionApercent: 50,\n    optionBpercent: 50\n  };\n\n  componentDidMount() {\n    this.setState({\n      host: localStorage.getItem(\"host\"),\n      title: localStorage.getItem(\"title\"),\n      optionA: localStorage.getItem(\"optionA\"),\n      optionB: localStorage.getItem(\"optionB\"),\n      optionAcount: parseInt(localStorage.getItem(\"optionAcount\")) + 1,\n      optionBcount: parseInt(localStorage.getItem(\"optionBcount\")) + 1\n    }, () => this.updateVotes());\n    console.log(this.state);\n  }\n\n  activePollExists = () => {\n    const { host, title, optionA, optionB } = this.state;\n    if (host === \"\" || host === null || title === \"\" || title === null || optionA === \"\" || optionA === null || optionB === \"\" || optionB === null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  addVoteLeft = () => {\n    this.setState({\n      optionAcount: parseInt(this.state.optionAcount) + 1\n    }, () => this.updateVotes());\n    console.log('clicked left');\n  };\n\n  addVoteRight = () => {\n    this.setState({\n      optionBcount: parseInt(this.state.optionBcount) + 1\n    }, () => this.updateVotes());\n    console.log('clicked right');\n  };\n\n  updateVotes = () => {\n    var totalVotes = parseInt(this.state.optionAcount) + parseInt(this.state.optionBcount);\n    var percentA = (parseInt(this.state.optionAcount) / totalVotes) * 100;\n    var percentB = (parseInt(this.state.optionBcount) / totalVotes) * 100;\n    this.setState({\n      optionApercent: Math.round(percentA),\n      optionBpercent: Math.round(percentB)\n    });\n    localStorage.setItem(\"optionAcount\", this.state.optionAcount);\n    localStorage.setItem(\"optionBcount\", this.state.optionBcount);\n    console.log(this.state.optionApercent, this.state.optionBpercent);\n  };\n  \n  viewReport = () => {\n    this.props.history.push('/report');\n  }\n\n  render() {\n    var gridSizes = {\n      display: \"grid\",\n      gridTemplateColumns:\n        this.state.optionApercent + \"%\" + this.state.optionBpercent + \"%\"\n    };\n    const {\n      host,\n      title,\n      optionA,\n      optionApercent,\n      optionB,\n      optionBpercent\n    } = this.state;\n    const activePoll = this.activePollExists();\n    console.log(activePoll);\n    console.log(this.state);\n    return (\n      <div className=\"main-container-lg\">\n        {activePoll ? (\n          <React.Fragment>\n            <div className=\"vote-container\">\n              <h1 className=\"poll-title\">{title}</h1>\n              <p className=\"poll-info\">(Click on desired side to vote)</p>\n              <div className=\"voting-box\" style={gridSizes}>\n                <div className=\"optionA\" onClick={this.addVoteLeft}>\n                  <span className=\"option-size\">{optionApercent}%</span>\n                  <span className=\"option-title\">{optionA}</span>\n                </div>\n                <div className=\"optionB\" onClick={this.addVoteRight}>\n                  <span className=\"option-size\">{optionBpercent}%</span>\n                  <span className=\"option-title\">{optionB}</span>\n                </div>\n              </div>\n              <span className=\"host-name\">Hosted by: {host}</span>\n            </div>\n            <Stats data={this.state}/>\n            <button className=\"btn-end\" onClick={this.viewReport}>End Poll</button>\n          </React.Fragment>\n        ) : (\n          <NotFound />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Vote);\n","import Vote from './Vote';\nexport default Vote;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass PollForm extends React.Component {\n\n  state = {\n    host: '',\n    title: '',\n    optionA: '',\n    optionB: '',\n    error: ''\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n  }\n\n  startPoll = () => {\n    const { host, title, optionA, optionB} = this.state;\n    if ( host === '' || title === '' || optionA === '' || optionB === '') {\n      this.setState ({\n        error: 'Please fill out all the fields'\n      });\n    } else {\n      localStorage.setItem(\"host\", host);\n      localStorage.setItem(\"title\", title);\n      localStorage.setItem(\"optionA\", optionA);\n      localStorage.setItem(\"optionAcount\", 0);\n      localStorage.setItem(\"optionB\", optionB);\n      localStorage.setItem(\"optionBcount\", 0);\n      this.props.history.push('/vote');\n    }\n  }\n\n  updateFormState = (e) => {\n    this.clearErrorMessage();\n    this.setState ({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  clearErrorMessage = () => {\n    this.setState ({\n      error: ''\n    })\n  }\n\n  render() {\n    return(\n      <form>\n        <input type=\"text\" name=\"host\" id=\"host\" className=\"form-input\" placeholder=\"Host Name\" onChange={e => this.updateFormState(e)} />\n        <hr />\n        <input type=\"text\" name=\"title\" id=\"survey-title\" className=\"form-input\" placeholder=\"Poll Title\" onChange={e => this.updateFormState(e)} />\n        <br /><br />\n        <input type=\"text\" name=\"optionA\" id=\"optionA\" className=\"form-input\" placeholder=\"Option A\" maxLength=\"15\" onChange={e => this.updateFormState(e)} />\n        <br /><br />\n        <input type=\"text\" name=\"optionB\" id=\"optionB\" className=\"form-input\" placeholder=\"Option B\" maxLength=\"15\" onChange={e => this.updateFormState(e)} />\n        <span className=\"error-msg\">{this.state.error}</span>\n        <p className=\"btn-start\" onClick={this.startPoll}> Start poll </p>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(PollForm);","import React from 'react';\nimport Header from '../commons/Header/Header';  \nimport PollForm from './Form';\n\nconst NewPoll = () => (   \n  <div className=\"main-container\">\n    <Header />  \n    <div className=\"polls-container\">\n      <br />\n      <PollForm />\n    </div>\n  </div>\n)\n\nexport default (NewPoll);\n","import React from 'react';\n\nconst GraphLegend = props => {\n  const {optionA, optionB, optionAcolor, optionBcolor} = props;\n\n  return (\n    <div className=\"legend-container\">\n      <div className=\"inner-legend\">\n        <div className=\"color-box\" style={{ background: optionAcolor }} />\n        <div className=\"text-box\">{optionA}</div>\n      </div>\n      <div className=\"inner-legend\">\n        <span className=\"color-box\" style={{ background: optionBcolor }}/>\n        <span className=\"text-box\">{optionB}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default GraphLegend;","import React from 'react';\nimport PieChart from 'react-minimal-pie-chart';\nimport GraphLegend from './GraphLegend';\n\n\nclass Graph extends React.Component {\n\n  render() {\n    const { \n      optionA, \n      optionAcount, \n      optionB, \n      optionBcount\n    } = this.props.graphStats;\n\n    const optionBcolor = '#c066b1';\n    const optionAcolor = '#61a5ff';\n\n    return (\n      <div className=\"graph-container\">\n        <PieChart\n          className={'piechart'}\n          data={[\n            {\n              title: optionA,\n              value: optionAcount,\n              color: optionAcolor\n            },\n            {\n              title: optionB,\n              value: optionBcount,\n              color: optionBcolor\n            }\n          ]}\n          label\n          labelStyle={{\n            fontSize: '7px',\n            fontFamily: 'sans-serif'\n          }}\n          radius={42}\n          labelPosition={112}\n          animate\n        />\n        <GraphLegend \n          optionA={optionA} \n          optionAcolor={optionAcolor}\n          optionB={optionB}\n          optionBcolor={optionBcolor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Graph;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotFound from '../commons/NotFound/NotFound';\nimport Graph from './Graph';\n\nclass Report extends React.Component {\n\n  state = {\n    host: \"\",\n    title: \"\",\n    optionA: \"\",\n    optionB: \"\",\n    optionAcount: 0,\n    optionBcount: 0\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      host: localStorage.getItem(\"host\"),\n      title: localStorage.getItem(\"title\"),\n      optionA: localStorage.getItem(\"optionA\"),\n      optionB: localStorage.getItem(\"optionB\"),\n      optionAcount: parseInt(localStorage.getItem(\"optionAcount\")) - 1,\n      optionBcount: parseInt(localStorage.getItem(\"optionBcount\")) - 1\n    });\n  }\n  \n  activePollExists = () => {\n    const { host, title, optionA, optionB } = this.state;\n    if (host === \"\" || host === null || title === \"\" || title === null || optionA === \"\" || optionA === null || optionB === \"\" || optionB === null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  render() {\n    const activePoll = this.activePollExists();\n    const totalVotes = this.state.optionAcount + this.state.optionBcount;\n    return(\n      <div className=\"main-container\">\n        {activePoll ? \n        <React.Fragment>\n          <h2>{this.state.title}</h2>\n          <Graph graphStats={this.state} />\n          <p> <b>{totalVotes}</b> votes casted</p>\n          <p>Poll hosted by: {this.state.host}</p>\n          <br />\n          <Link to='/ask' className=\"btn-ask\">Start another poll</Link>\n        </React.Fragment>\n        : <NotFound />\n      }\n      </div>\n    );\n  }\n}\n\nexport default Report;","import React from 'react';\nimport { BrowserRouter, Route, } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Vote from './components/Vote';\nimport NewPoll from './components/NewPoll/NewPoll';\nimport Report from './components/Report/Report';\n\nconst Router = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Route exact path=\"/\" component={Landing} />\n    <Route path=\"/ask\" component={NewPoll} />\n    <Route path=\"/report\" component={Report} />\n    <Route path=\"/vote\" component={Vote} /> \n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport Router from './Router';\nimport './App.css';\n\nconst App = () => (    \n  <div className=\"App\">\n    <Router />      \n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}